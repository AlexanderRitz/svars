library(vars)
?VAR
library(vars)
?VAR
rm(list = ls())
library(ggplot2)
library(vars)
library(reshape2)
library(svMisc)
library(urca)
library(zoo)
library(expm)
setwd('/home/alex/Schreibtisch/Praktikum/DIW/Guido/Guido/Neues_Projekt/Codes/Real_USA/Stationary')
source('CovMat.R')
source('ImpuldeResponseFunction.R')
source('Boot.R')
source('PlotShocks.R')
setwd('/home/alex/Schreibtisch/RPackages/Investments_CV/Codes/Real_USA/')
source('CovMat.R')
source('ImpuldeResponseFunction.R')
source('Boot.R')
source('PlotShocks.R')
source('CoeffMat.R')
source('RollingWindow.R')
source('Growth.R')
source('Analysis.R')
source('chow.test.R')
source('ChangesVola.R')
source('DataGen.R')
source('Wald.test.R')
source('DataGen2.R')
LagOrder1 <- 'aic' # Lag order for pre period. If 'aic' (default) the lag order is defined by AIC.
LagOrder2 <- 'aic' # Lag order for post period. If 'aic' (default) the lag order is defined by AIC.
SB <- '1984 Q4'    # Assumed Structural Break
Beg <- '1957q1'    # Beginning of the series
horizon <- 12      # Number of lags for Impulse response function
nboot <- 500       # Number of bootstrap iterations (should be  at least 10000 for consistent result)
lowerbound <- 0.16 # lower bound for CI
upperbound <- 0.84 # upper bound for CI
nTS <- 4           # number of time series
DataPlot <- T # Data Plot of Series after transformation (These are the series which are estimated)
RollW <- T    # Rolling window analysis
StatTest <- T # Testing each series for stationarity at 5% significance level
SBtest <- T   # testing for the pre determined SB with a chow test at 5%
dfLags <- 4   # Lag order for dickey fuller stationary test
Clag <- 'aic' # lag order for chow test
bootC <- F    # if the Chow test statistic should be bootstraped
nCboot <- 2000 # number of bootstrap replications
TimeSeries <- read.csv2('/home/alex/Schreibtisch/Praktikum/DIW/Guido/Guido/Neues_Projekt/Daten_Projekt/USA/DataUSAreal.csv')
TimeSeries <- read.csv2('/home/alex/Schreibtisch/RPackages/Investments_CV/Daten_Projekt/USA/DataUSAreal.csv')
TimeSeries <- TimeSeries[,1:5]
TimeSeries <- na.omit(TimeSeries)
Results <- Analysis()
View(TimeSeries)
xx <- VAR(TimeSeries[,-1], p = 4)
x <- xx
u_t <- residuals(x)
p <- x$p
Tob <- x$obs
k <-x$K
TB <- SB - p
SB <- 100
TB <- SB - p
resid1 <- u_t[1:TB-1,]
resid2 <- u_t[TB:Tob,]
Sigma_hat1 <- (t(resid1) %*% resid1) / (TB-1)
